syntax = "proto3";

package olvid.daemon.notification.v1;

import "olvid/daemon/datatypes/v1/message.proto";

option go_package = "olvid.io/daemon";
option java_multiple_files = true;
option java_package = "io.olvid.desktop.daemon.protobuf";

/*
 ** MessageReceived
 */
message SubscribeToMessageReceivedNotification {
  optional uint64 count = 1;
  optional datatypes.v1.MessageFilter filter = 2;
}
message MessageReceivedNotification {
  datatypes.v1.Message message = 1;
}

/*
 ** MessageSent
 */
message SubscribeToMessageSentNotification {
  optional uint64 count = 1;
  optional datatypes.v1.MessageFilter filter = 2;
}
message MessageSentNotification {
  datatypes.v1.Message message = 1;
}

/*
 ** MessageDeleted
 */
message SubscribeToMessageDeletedNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
}
message MessageDeletedNotification {
  datatypes.v1.Message message = 1;
}

/*
 ** MessageBodyUpdated
 */
message SubscribeToMessageBodyUpdatedNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
}
message MessageBodyUpdatedNotification {
  datatypes.v1.Message message = 1;
  string previous_body = 2;
}

// You cannot guarantee this notification will arrive when working with ephemeral message
/*
 ** MessageUploaded
 */
message SubscribeToMessageUploadedNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
}
message MessageUploadedNotification {
  datatypes.v1.Message message = 1;
}

// You cannot guarantee this notification will arrive when working with ephemeral message
/*
 ** MessageDelivered
 */
message SubscribeToMessageDeliveredNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
}
message MessageDeliveredNotification {
  datatypes.v1.Message message = 1;
}

// You cannot guarantee this notification will arrive when working with ephemeral message
/*
 ** MessageRead
 */
message SubscribeToMessageReadNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
}
message MessageReadNotification {
  datatypes.v1.Message message = 1;
}

/*
 ** MessageLocationReceived
 ** triggered by inbound messages
 */
message SubscribeToMessageLocationReceivedNotification {
  optional uint64 count = 1;
  optional datatypes.v1.MessageFilter filter = 2;
}
message MessageLocationReceivedNotification {
  datatypes.v1.Message message = 1;
}

/*
 ** MessageLocationSent
 ** triggered by outbound messages
 */
message SubscribeToMessageLocationSentNotification {
  optional uint64 count = 1;
  optional datatypes.v1.MessageFilter filter = 2;
}
message MessageLocationSentNotification {
  datatypes.v1.Message message = 1;
}

/*
 ** MessageLocationSharingStart
 ** triggered by inbound AND outbound messages
 */
message SubscribeToMessageLocationSharingStartNotification {
  optional uint64 count = 1;
  optional datatypes.v1.MessageFilter filter = 2;
}
message MessageLocationSharingStartNotification {
  datatypes.v1.Message message = 1;
}

/*
 ** MessageLocationSharingUpdate
 ** triggered by inbound AND outbound messages
 */
message SubscribeToMessageLocationSharingUpdateNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
}
message MessageLocationSharingUpdateNotification {
  datatypes.v1.Message message = 1;
  datatypes.v1.MessageLocation previous_location = 2;
}

/*
 ** MessageLocationSharingEnd
 ** triggered by inbound AND outbound messages
 */
message SubscribeToMessageLocationSharingEndNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
}
message MessageLocationSharingEndNotification {
  datatypes.v1.Message message = 1;
}

/*
 ** MessageReactionAdded
 */
message SubscribeToMessageReactionAddedNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
  optional datatypes.v1.ReactionFilter reaction_filter = 4;
}
message MessageReactionAddedNotification {
  datatypes.v1.Message message = 1;
  datatypes.v1.MessageReaction reaction = 2;
}

/*
 ** MessageReactionUpdated
 */
message SubscribeToMessageReactionUpdatedNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter message_filter = 3;
  optional datatypes.v1.ReactionFilter reaction_filter = 4;
  optional datatypes.v1.ReactionFilter previous_reaction_filter = 5;
}
message MessageReactionUpdatedNotification {
  datatypes.v1.Message message = 1;
  datatypes.v1.MessageReaction reaction = 2;
  datatypes.v1.MessageReaction previous_reaction = 3;
}

/*
 ** MessageReactionRemoved
 */
message SubscribeToMessageReactionRemovedNotification {
  optional uint64 count = 1;
  repeated datatypes.v1.MessageId message_ids = 2;
  optional datatypes.v1.MessageFilter filter = 3;
  optional datatypes.v1.ReactionFilter reaction_filter = 4;
}
message MessageReactionRemovedNotification {
  datatypes.v1.Message message = 1;
  datatypes.v1.MessageReaction reaction = 2;
}
